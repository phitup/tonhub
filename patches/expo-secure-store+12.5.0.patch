diff --git a/node_modules/expo-secure-store/.DS_Store b/node_modules/expo-secure-store/.DS_Store
new file mode 100644
index 0000000..36d39ae
Binary files /dev/null and b/node_modules/expo-secure-store/.DS_Store differ
diff --git a/node_modules/expo-secure-store/ios/SecureStoreModule.swift b/node_modules/expo-secure-store/ios/SecureStoreModule.swift
index 9a49b95..e603534 100644
--- a/node_modules/expo-secure-store/ios/SecureStoreModule.swift
+++ b/node_modules/expo-secure-store/ios/SecureStoreModule.swift
@@ -58,8 +58,21 @@ public final class SecureStoreModule: Module {
       guard let _ = Bundle.main.infoDictionary?["NSFaceIDUsageDescription"] as? String else {
         throw MissingPlistKeyException()
       }
-      let accessOptions = SecAccessControlCreateWithFlags(kCFAllocatorDefault, accessibility, SecAccessControlCreateFlags.biometryCurrentSet, nil)
-      query[kSecAttrAccessControl as String] = accessOptions
+      var hasBiometricAuthentication = false
+      if #available(iOS 11.3, *) {
+          let context = LAContext()
+          if context.canEvaluatePolicy(.deviceOwnerAuthenticationWithBiometrics, error: nil) {
+              hasBiometricAuthentication = true
+          }
+      }
+      
+      if !hasBiometricAuthentication {
+          let accessOptions = SecAccessControlCreateWithFlags(nil, accessibility, .devicePasscode, nil)
+          query[kSecAttrAccessControl as String] = accessOptions
+      } else {
+          let accessOptions = SecAccessControlCreateWithFlags(nil, accessibility, .biometryCurrentSet, nil)
+          query[kSecAttrAccessControl as String] = accessOptions
+      }
     }
 
     let status = SecItemAdd(query as CFDictionary, nil)
